>>> from BCode import BCode
>>> BCoder = BCode()

====================
Test number
Format: i<Digits>e

>>> Result = BCoder.Decode("i1234567890e")
>>> Result
1234567890

>>> Result = BCoder.Decode("i-150999e")
>>> Result
-150999

>>> Result = BCoder.Decode("ie")
>>> Result
0

>>> Result = BCoder.Decode("i12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890e")
>>> Result
12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890L

>>> Result = BCoder.Decode("i1.599e")
>>> Result
1

>>> Result = BCoder.Decode("i****e")
>>> Result
0

>>> BCoder.Decode("i1234")
Traceback (most recent call last):
BCodeError: End of file

>>> BCoder.Decode("i")
Traceback (most recent call last):
BCodeError: End of file

>>> Result = BCoder.Encode(1234567890)
>>> Result
'i1234567890e'

>>> Result = BCoder.Encode(-150999)
>>> Result
'i-150999e'

====================
Test byte array
Format: <Array Size>:<Array Bytes>

>>> Result = BCoder.Decode("5:Hello")
>>> Result
'Hello'

>>> Result = BCoder.Decode("3:Hello")
>>> Result
'Hel'

>>> Result = BCoder.Decode("0:")
>>> Result
''

>>> BCoder.Decode("6:Hello")
Traceback (most recent call last):
BCodeError: End of file

>>> BCoder.Decode("100")
Traceback (most recent call last):
BCodeError: End of file

>>> Result = BCoder.Encode("Hello")
>>> Result
'5:Hello'

>>> Result = BCoder.Encode("")
>>> Result
'0:'

>>> Result = BCoder.Encode("5")
>>> Result
'1:5'

====================
Test list
Format: l<Elements>e

>>> Result = BCoder.Decode("li125ei-250ei1000e7:Docteste")
>>> Result
[125, -250, 1000, 'Doctest']

>>> Result = BCoder.Decode("le")
>>> Result
[]

>>> Result = BCoder.Decode("l****e")
>>> Result
[]

>>> BCoder.Decode("li25e")
Traceback (most recent call last):
BCodeError: End of file

>>> Result = BCoder.Decode("l10:Matrix 3x3li1ei2ei3eeli4ei5ei6eeli7ei8ei9eee")
>>> Result
['Matrix 3x3', [1, 2, 3], [4, 5, 6], [7, 8, 9]]

>>> Result = BCoder.Encode([1, 2, 3, 4, 5, "a", "b", "c", [6, 7, 8]])
>>> Result
'li1ei2ei3ei4ei5e1:a1:b1:cli6ei7ei8eee'

>>> Result = BCoder.Encode([])
>>> Result
'le'

>>> Result = BCoder.Encode([[[[[[[[[["10 nested lists"]]]]]]]]]])
>>> Result
'llllllllll15:10 nested listseeeeeeeeee'

====================
Test dictionary
Format: d<Dictionary Elements>e
Element: <Byte Array><Element>

>>> Result = BCoder.Decode("d1:a5:aaaaa1:b6:bbbbbbe")
>>> Result
OrderedDict([('a', 'aaaaa'), ('b', 'bbbbbb')])